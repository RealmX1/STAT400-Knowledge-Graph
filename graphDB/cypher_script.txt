// Load CSV data
LOAD CSV WITH HEADERS FROM 'file:///concepts_regex_blocks.csv' AS row

// Create or match Chapter node
MERGE (c:Chapter {name: row.chapter_name})

// Create or match Section node and connect to Chapter
MERGE (s:Section {name: row.section_name})
MERGE (c)-[:HAS_SECTION]->(s)

// Create Subsection node if it exists and connect to Section
WITH row, c, s
OPTIONAL MATCH (ss:Subsection {name: row.subsection_name})
FOREACH (_ IN CASE WHEN row.subsection_name IS NOT NULL AND row.subsection_name <> '' THEN [1] ELSE [] END |
  MERGE (ss:Subsection {name: row.subsection_name})
  MERGE (s)-[:HAS_SUBSECTION]->(ss)
)

// Determine the parent node (Subsection if exists, else Section)
WITH row, c, s, CASE WHEN ss IS NOT NULL THEN ss ELSE s END AS parent

// Determine the block label based on block_type
WITH parent, row,
     CASE row.block_type
         WHEN 'definition' THEN 'Definition'
         WHEN 'example' THEN 'Example'
         WHEN 'theorem' THEN 'Theorem'
         WHEN 'proof' THEN 'Proof'
         WHEN 'general description' THEN 'GeneralDescription'
         ELSE 'Block'
     END AS blockLabel

// Create the Block node with appropriate label and content
CALL apoc.merge.node([blockLabel], {content: row.block_content}) YIELD node AS b

// Connect the Block to the parent node
MERGE (parent)-[:HAS_BLOCK]->(b);
